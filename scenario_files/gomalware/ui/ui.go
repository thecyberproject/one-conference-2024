package ui

import (
	"crowdstriker/ui/components"

	"gioui.org/app"
	"gioui.org/layout"
	"gioui.org/op"
	"gioui.org/widget"
	"gioui.org/widget/material"
)

type (
	Context   = layout.Context
	Dimension = layout.Dimensions
)

type handlers func() error

func Draw(w *app.Window, onclickFuncs ...handlers) error {
	var ops op.Ops

	var startButton widget.Clickable

	th := material.NewTheme()

	for {
		switch e := w.Event().(type) {

		case app.FrameEvent:
			gtx := app.NewContext(&ops, e)
			layout.Flex{
				Axis:    layout.Vertical,
				Spacing: layout.SpaceStart,
			}.Layout(gtx,
				layout.Rigid(func(gtx Context) Dimension {
					return components.DrawLogo(gtx)
				}),
				layout.Rigid(func(gtx Context) Dimension {
					return components.Button(gtx, &startButton, th)
				}),
			)

			if startButton.Clicked(gtx) {
				for _, onclickFunc := range onclickFuncs {
					return onclickFunc()
				}
			}
			e.Frame(gtx.Ops)

		case app.DestroyEvent:
			return e.Err
		}
	}
}
